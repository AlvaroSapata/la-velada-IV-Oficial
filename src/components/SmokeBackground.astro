<div id="smoke-bkg" class="fixed top-0 h-full w-full" ></div>

<script>
  import * as THREE from "three";

  const $bkg = document.getElementById("smoke-bkg");

  let w = window.innerWidth;
  let h = window.innerHeight;

  // Initialize Three.js
  // 3 steps -> Scene, Camera, Renderer

  // Scene
  const scene = new THREE.Scene();

  // Camera
  const camera = new THREE.PerspectiveCamera(75, w / h, 1, 1000);
  camera.position.z = 10;
  scene.add(camera);

  // Renderer
  const renderer = new THREE.WebGLRenderer();
  renderer.setSize(w, h);

  // Background color
  renderer.setClearColor(0xffffff, 1);

  $bkg?.appendChild(renderer.domElement);

  // Add directional light
  const light = new THREE.DirectionalLight(0xffffff,0.5)

  // Light position
  light.position.set(-1,3,1)
  scene.add(light)

  // Array to store smoke particles
  const smokeParticles : THREE.Mesh[] = [];

  const loader = new THREE.TextureLoader();
  loader.crossOrigin = "anonymous"; // <- Allow cross-origin loading, may be needed depending on the server setup

  loader.load("/public/smoke.webp", (texture: THREE.Texture) => {
    // Geometry
    const smokeGeo = new THREE.PlaneGeometry(300, 300);

    // Material
    const smokeMaterial = new THREE.MeshLambertMaterial({
      map: texture,
      transparent: true,
      opacity: 0.3
    });

    const NUM_OF_PARTICLES = 300;
    for (let p = 0; p < NUM_OF_PARTICLES; p++) {
      // Create particle
      const particle = new THREE.Mesh(smokeGeo, smokeMaterial);

      // Random position
      particle.position.set(
        Math.random() * 500 - 250,  // X (from -250 to 250)
        Math.random() * 500 - 250,  // Y (from -250 to 250)
        Math.random() * 1000 - 100   // Z (from -100 to 900)
      );

      // Random rotation
      particle.rotation.z = Math.random() * 360;

      // Add particle to scene and array
      scene.add(particle);
      smokeParticles.push(particle);
    }
  });

  function resize (){
    h = window.innerHeight;
    w = window.innerWidth;
    camera.aspect = w/h;
    camera.updateProjectionMatrix();
    renderer.setSize(w,h)
  }

  function animate() {
    requestAnimationFrame(animate);

    // Rotate particles
    smokeParticles.forEach((particle) => {
      particle.rotation.z += 0.002;
    });

    // Render scene with camera
    renderer.render(scene, camera);
  }

  animate();

  //This will trigger continiously while doing the resize
  window.addEventListener("resize",resize)
</script>
